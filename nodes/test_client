#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import rclpy
from rclpy.action import ActionClient
from rclpy.node import Node
from japanese_text_to_speech.action import Speak


class TestClient(Node):

    def __init__(self):
        super().__init__('japanese_tts_test_client')
        self.declare_parameters(
            namespace='',
            parameters=[
                ('action_name', 'japanese_text_to_speech'),
                ('text', 'テスト'),
                ('speed_rate', 0.5)
            ]
        )

        self._action_name = self.get_parameter('action_name').get_parameter_value().string_value
        self._text = self.get_parameter('text').get_parameter_value().string_value
        self._speed_rate = self.get_parameter('speed_rate').get_parameter_value().double_value
        self._action_client = ActionClient(self, Speak, self._action_name)

    def send_goal(self):
        self.get_logger().info('Waiting japanese_text_to_speech server')
        self._action_client.wait_for_server()

        self.get_logger().info('Sending goal to server')
        goal_msg = Speak.Goal()
        goal_msg.text = self._text
        goal_msg.speed_rate = self._speed_rate

        return self._action_client.send_goal_async(goal_msg)


def main(args=None):
    rclpy.init(args=args)

    action_client = TestClient()

    future = action_client.send_goal()

    rclpy.spin_until_future_complete(action_client, future)


if __name__ == '__main__':
    main()

